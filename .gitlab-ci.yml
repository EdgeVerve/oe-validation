stages:
  - pre-build
  - pre-build-test
  - build
  - cleanup

image: $REGISTRY/debian-node-oracle-docker
variables:
  REGISTRY: registry.${DOMAIN_NAME}

before_script:
  - export project=${CI_PROJECT_NAME//[^[:alnum:]]/}
  - export group=${CI_PROJECT_NAMESPACE//[^[:alnum:]]/}
  - export branch=${CI_BUILD_REF_NAME//[^[:alnum:]]/}
  - export pipelineId=${CI_PIPELINE_ID//[^[:alnum:]]/}

npminstall:
  stage: pre-build
  script:
    - echo "Performing code style check..."
    - status_eslint=0
    - exit_status=0
    - npm set progress=false
    - time npm install eslint babel-eslint --no-optional
    - if npm run lint; then status_eslint=0; else status_eslint=1; fi
    - if [ $status_eslint == 1 ]; then exit_status=1 && echo "esLint errors exist"; fi
    - if [ $exit_status == 1 ]; then exit $exit_status; fi
    - echo "Code style check done successfully"
    - time npm install --no-optional
    - echo "Node Modules Installed"
  artifacts:
    untracked: true
    expire_in: 2h
    paths:
      - node_modules/
  tags:
    - CEP_RUNNER


mongotest:
  stage: pre-build-test
  script:
    - echo 'Performing MongoDB Test'
    - export NODE_ENV=mongo
    - export MONGO_HOST="10.73.53.144"
    - export DB=mongo
    - export DB_NAME=${CI_PIPELINE_ID}_mongo
    - time npm install --no-optional
    - npm run grunt-cover
  artifacts:
    untracked: true
    expire_in: 2h
    paths:
      - coverage/
    when: on_failure
  tags:
    - CEP_RUNNER

postgrestest:
  stage: pre-build-test
  script:
    - echo 'Performing PostgreSQL Test'
    - export ENABLE_DS_AUTOUPDATE=true 
    - export NODE_ENV=postgres
    - export DB=postgres
    - export POSTGRES_HOST="10.73.53.144"
    - export DB_NAME=${CI_PIPELINE_ID}_pg
    - time npm install git+http://evgit/atul/loopback-connector-postgresql.git --save
    - time npm install --no-optional
    - npm run grunt-cover
  tags:
    - CEP_RUNNER    
  tags:
    - CEP_RUNNER
    
oracletest:
  stage: pre-build-test
  script:
    - echo 'Performing Oracle Test'
    - export APP_TAG=oracle
    - export NODE_ENV=oracle
    - export ORACLE_HOST=10.73.53.144
    - export ORACLE_SYSUSER=oeadmin
    - export ORACLE_SYSPASSWORD=oeadmin
    - export ORACLE_SID=ORCLCDB
    - export ENABLE_DS_AUTOUPDATE=true
    - export DB_NAME=${CI_PIPELINE_ID}_pg
    - time npm install git+http://evgit/oecloud.io/oe-connector-oracle.git --no-optional
    - time npm install --no-optional
    - mv /oracledb node_modules/
    - export CI_PROJECT_NAMESPACE=${group}
    - node test/oracle-utility.js
    - export ORACLE_USERNAME=${CI_PROJECT_NAMESPACE}"-"${CI_PROJECT_NAME}
    - export ORACLE_USERNAME=$(echo $ORACLE_USERNAME | tr '[:lower:]' '[:upper:]')
    - export ORACLE_PASSWORD=$(echo $CI_PROJECT_NAMESPACE | tr '[:upper:]' '[:lower:]')
    - echo "Oracle user details:"${ORACLE_USERNAME}"/"${ORACLE_PASSWORD}
    - npm run grunt-cover
  tags:
    - CEP_RUNNER    

buildjob:
  stage: build
  script: 
    - echo "Building Image"
  tags:
    - CEP_RUNNER

lastcleanup:
  stage: cleanup
  script:
    - echo "Finishing CI CD"
  tags:
    - CEP_RUNNER

